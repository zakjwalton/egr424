Zak@DESKTOP-GSAG0KF ~/egr424/demo
$ arm-none-eabi-gdb.exe
GNU gdb (Sourcery G++ Lite 2010q1-188) 7.0.50.20100218-cvs
Copyright (C) 2010 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "--host=i686-mingw32 --target=arm-none-eabi".
For bug reporting instructions, please see:
<https://support.codesourcery.com/GNUToolchain/>.
(gdb) fla   ddf
Undefined command: "ddf".  Try "help".
(gdb) flash hello.elf
Undefined command: "flash".  Try "help".
(gdb)

Zak@DESKTOP-GSAG0KF ~/egr424/demo
$ ^C

Zak@DESKTOP-GSAG0KF ~/egr424/demo
$ clear

Zak@DESKTOP-GSAG0KF ~/egr424/demo
$ ls
hello.c  hello.elf  hello.ld  startup_gcc.c

Zak@DESKTOP-GSAG0KF ~/egr424/demo
$ arm-none-eabi-gdb.exe
GNU gdb (Sourcery G++ Lite 2010q1-188) 7.0.50.20100218-cvs
Copyright (C) 2010 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "--host=i686-mingw32 --target=arm-none-eabi".
For bug reporting instructions, please see:
<https://support.codesourcery.com/GNUToolchain/>.
(gdb) file hello.elf
Reading symbols from c:\users\zak\egr424\demo\hello.elf...done.
(gdb) target remote localhost:3333
Remote debugging using localhost:3333
0x00000000 in g_pfnVectors ()
(gdb) monitor reset halt
JTAG tap: lm3s6965.cpu tap/device found: 0x3ba00477 (mfg: 0x23b, part: 0xba00, ver: 0x3)
target state: halted
target halted due to debug-request, current mode: Thread
xPSR: 0x01000000 pc: 0x0000012c msp: 0x20000100
(gdb) b main
Breakpoint 1 at 0xfa: file hello.c, line 65.
(gdb) continue
Continuing.
Note: automatically using hardware breakpoints for read-only addresses.

Breakpoint 1, main () at hello.c:65
65          temp = my_abs(-4);
(gdb) disas
Dump of assembler code for function main:
   0x000000f8 <+0>:     strb    r0, [r0, #2]
=> 0x000000fa <+2>:     bl      0x12a8
   0x000000fe <+6>:     movw    r0, #16960      ; 0x4240
   0x00000102 <+10>:    movt    r0, #15
   0x00000106 <+14>:    bl      0xebc
   0x0000010a <+18>:    movw    r0, #5704       ; 0x1648
End of assembler dump.
(gdb) b my_abs
Breakpoint 2 at 0xf0: file hello.c, line 55.
(gdb) continue
Continuing.


Zak@DESKTOP-GSAG0KF ~/egr424/demo
$ arm-none-eabi-gdb.exe
GNU gdb (Sourcery G++ Lite 2010q1-188) 7.0.50.20100218-cvs
Copyright (C) 2010 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "--host=i686-mingw32 --target=arm-none-eabi".
For bug reporting instructions, please see:
<https://support.codesourcery.com/GNUToolchain/>.
(gdb) file hello.elf
Reading symbols from c:\users\zak\egr424\demo\hello.elf...done.
(gdb) load
You can't do that when your target is `exec'
(gdb) monitor target localhost:3333
"monitor" command not supported by this target.
(gdb)

Zak@DESKTOP-GSAG0KF ~/egr424/demo
$ arm-none-eabi-gdb.exe
GNU gdb (Sourcery G++ Lite 2010q1-188) 7.0.50.20100218-cvs
Copyright (C) 2010 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "--host=i686-mingw32 --target=arm-none-eabi".
For bug reporting instructions, please see:
<https://support.codesourcery.com/GNUToolchain/>.
(gdb) file hello.elf
Reading symbols from c:\users\zak\egr424\demo\hello.elf...done.
(gdb) monitor target localhost:3333
"monitor" command not supported by this target.
(gdb) target remote localhost:3333
Remote debugging using localhost:3333
0x00000000 in g_pfnVectors ()
(gdb) load
Error erasing flash with vFlashErase packet
(gdb) monitor reset halt
JTAG tap: lm3s6965.cpu tap/device found: 0x3ba00477 (mfg: 0x23b, part: 0xba00, ver: 0x3)
target state: halted
target halted due to debug-request, current mode: Thread
xPSR: 0x01000000 pc: 0x0000012c msp: 0x20000100
(gdb) load
Loading section .text, size 0x1c4 lma 0x0
Start address 0x11c, load size 452
Transfer rate: 1 KB/sec, 452 bytes/write.
(gdb) b main
Breakpoint 1 at 0xfa: file hello.c, line 65.
(gdb) continue
Continuing.
Note: automatically using hardware breakpoints for read-only addresses.

Breakpoint 1, main () at hello.c:65
65          temp = my_abs(-4);
(gdb) disas
Dump of assembler code for function main:
   0x000000f8 <+0>:     push    {r3, lr}
=> 0x000000fa <+2>:     mvn.w   r0, #3
   0x000000fe <+6>:     bl      0xf0 <my_abs>
   0x00000102 <+10>:    movw    r3, #256        ; 0x100
   0x00000106 <+14>:    movt    r3, #8192       ; 0x2000
   0x0000010a <+18>:    str     r0, [r3, #0]
   0x0000010c <+20>:    pop     {r3, pc}
End of assembler dump.
(gdb) step
my_abs (i=-4) at hello.c:55
55      }
(gdb) disas
Dump of assembler code for function my_abs:
=> 0x000000f0 <+0>:     cmp     r0, #0
   0x000000f2 <+2>:     it      lt
   0x000000f4 <+4>:     neglt   r0, r0
   0x000000f6 <+6>:     bx      lr
End of assembler dump.
(gdb) info reg
r0             0xfffffffc       4294967292
r1             0x20000104       536871172
r2             0x0      0
r3             0x1e     30
r4             0x0      0
r5             0x0      0
r6             0x0      0
r7             0x0      0
r8             0x0      0
r9             0xc0066408       3221644296
r10            0x0      0
r11            0xb1610001       2975924225
r12            0x100    256
sp             0x200000f8       0x200000f8
lr             0x103    259
pc             0xf1     0xf1 <my_abs>
fps            0x0      0
cpsr           0x61000020       1627389984
(gdb) stepi
0x000000f2      55      }
(gdb) disas
Dump of assembler code for function my_abs:
   0x000000f0 <+0>:     cmp     r0, #0
=> 0x000000f2 <+2>:     it      lt
   0x000000f4 <+4>:     neglt   r0, r0
   0x000000f6 <+6>:     bx      lr
End of assembler dump.
(gdb) stepi
0x000000f4      55      }
(gdb) stepi
0x000000f6      55      }
(gdb) disas
Dump of assembler code for function my_abs:
   0x000000f0 <+0>:     cmp     r0, #0
   0x000000f2 <+2>:     it      lt
   0x000000f4 <+4>:     neglt   r0, r0
=> 0x000000f6 <+6>:     bx      lr
End of assembler dump.
(gdb) info reg
r0             0x4      4
r1             0x20000104       536871172
r2             0x0      0
r3             0x1e     30
r4             0x0      0
r5             0x0      0
r6             0x0      0
r7             0x0      0
r8             0x0      0
r9             0xc0066408       3221644296
r10            0x0      0
r11            0xb1610001       2975924225
r12            0x100    256
sp             0x200000f8       0x200000f8
lr             0x103    259
pc             0xf7     0xf7 <my_abs+6>
fps            0x0      0
cpsr           0xa1000020       2701131808
(gdb)

Zak@DESKTOP-GSAG0KF ~/egr424/demo
